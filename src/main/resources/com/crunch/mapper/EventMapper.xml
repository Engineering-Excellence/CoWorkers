<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.crunch.mapper.EventMapper">


    <!-- 일정 1건 insert -->
    <!--                 to_date(substr(#{startDate}, 1, 19), 'YYYY-MM-DD HH24:MI:SS'),
                to_date(substr(#{endDate}, 1, 19), 'YYYY-MM-DD HH24:MI:SS'), -->
    <insert id="insert" parameterType="eDTO">
		insert into event (eventid, groupid, 
                           username,
                           userid,
                           subject,
                           content,
                           startdate,
                           enddate,
                           eventcolor,
                           hit,
                           ip,
                           allday,
                           commentcount,
                           textcolor, 
                           bordercolor)
        values (event_idx_seq.nextval, #{groupID}, 
                #{userName},
                #{userID},
                #{subject},
                #{content},
                TO_TIMESTAMP(#{startDate}, 'YYYY-MM-DD HH24:MI:SS.FF1'),
                TO_TIMESTAMP(#{endDate}, 'YYYY-MM-DD HH24:MI:SS.FF1'),
                #{eventColor},
                0,
                #{ip},
                decode(#{allDay}, 0, 'false', 1, 'true'),
                0,
                #{textColor}, 
                #{eventColor})
    </insert>

    <!-- 페이징이 필요없는 리스트 dto로 얻어온다. -->
    <select id="selectEList" resultType="eDTO"> <!-- calendar 표시 -->
        select *
        from event
        where deletedate is null
        order by eventid asc
    </select>

     <!-- 페이징이 필요없는 리스트 dto로 얻어온다. --> <!-- calendar allDay 이벤트로 표시 [긴급] 표시 -->
<!--     <select id="selectwList" resultType="com.crunch.dto.WorkDTO">
        select *
        from work
        order by workID desc, deadline asc
    </select> -->

    <!-- eventSelectByEventID -->
    <select id="selectByEventID" parameterType="int" resultType="eDTO">
        select *
        from event
        where eventid = #{eventID}
    </select>

    <!-- 1건의 일정을 수정한다. -->
    <update id="update" parameterType="eDTO">
        update event
        set subject    = #{subject},
            content    = #{content},
            startdate  = #{startDate},
            enddate    = #{endDate},
            eventcolor = #{eventColor},
            ip         = #{ip},
            allday     = #{allDay},
            updateDate = sysdate
        where eventID = #{eventID}
    </update>

    <update id="delete" parameterType="int">
        update event
        set deletedate = sysdate
        where eventID = #{eventID}
    </update> 


</mapper>